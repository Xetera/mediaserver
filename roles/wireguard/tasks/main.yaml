- name: Enable dual stack forwarding
  ansible.posix.sysctl:
    name: "{{ item }}"
    value: "1"
    state: present
    sysctl_set: true
    reload: true
  loop:
    - net.ipv4.ip_forward
    - net.ipv6.conf.all.forwarding

- name: Install WireGuard
  ansible.builtin.apt:
    name: wireguard
    state: present
    update_cache: true

- name: Ensure /etc/wireguard directory exists
  ansible.builtin.file:
    path: /etc/wireguard
    state: directory
    owner: proxy
    group: proxy
    mode: "0700"

- name: Deploy WireGuard configuration
  ansible.builtin.template:
    src: wg0.conf.j2
    dest: /etc/wireguard/wg0.conf
    owner: proxy
    group: proxy
    mode: "0600"
  register: wireguard_config
  notify: Restart WireGuard

- name: Enable and start WireGuard service
  ansible.builtin.systemd:
    name: wg-quick@wg0
    enabled: true
    state: started

# CHECK NFTABLES INSTEAD
# - name: "DNAT plex port"
#   ansible.builtin.iptables:
#     table: nat
#     chain: PREROUTING
#     protocol: "{{ item.protocol }}"
#     in_interface: eth0
#     destination_port: "{{ item.port }}"
#     jump: DNAT
#     to_destination: "{{ wireguard.target.address }}:{{ item.port }}"
#   loop:
#     - port: 80
#       protocol: tcp
#     - port: 443
#       protocol: tcp
#     # for HTTP/3
#     - port: 80
#       protocol: udp
#     - port: 443
#       protocol: udp

# Not needed since this conceals the user's real IP
# and we route all returning traffic through the proxy anyway
# - name: "MASQUERADE incoming traffic to plex"
#   ansible.builtin.iptables:
#     table: nat
#     chain: POSTROUTING
#     jump: MASQUERADE
#     out_interface: wg0

# This rule enables egress from plex back to the internet
# without it only ingress response traffic is allowed out
# - name: Masquerade outgoing traffic from plex
#   ansible.builtin.iptables:
#     table: nat
#     chain: POSTROUTING
#     source: "{{ wireguard.subnet }}"
#     out_interface: eth0
#     jump: MASQUERADE

- name: Include watchdog tasks
  ansible.builtin.include_tasks: watchdog.yaml
