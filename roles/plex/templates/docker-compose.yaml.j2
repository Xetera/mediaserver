# code: language=yaml
# yaml-language-server: $schema=https://raw.githubusercontent.com/compose-spec/compose-spec/refs/heads/main/schema/compose-spec.json
networks:
  arr:
    external: true
  authelia:
    # created with ansible earlier
    external: true
  kopia:
    external: true

services:
  traefik:
    image: traefik:v3.4
    container_name: traefik
    restart: unless-stopped
    command:
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--log.level=DEBUG"
      - "--entrypoints.web.address=:80"
      # always https
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.metrics.address=:81"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--accesslog=true"
      - "--ping=true"
      # observability
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.entrypoint=metrics"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.asDefault=true"
      - "--providers.file.directory=/etc/traefik/dynamic_config"
      - "--providers.file.watch=true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/plex/services/traefik:/etc/traefik
    networks:
      authelia:
      arr:
      kopia:
    extra_hosts:
      - "host.docker.internal:host-gateway"
    labels:
      traefik.enable: true
      traefik.http.routers.api.rule: Host(`{{ traefik.domain }}`)
      traefik.http.services.api.loadbalancer.server.port: 8080
      traefik.http.routers.api.tls: "true"
      traefik.http.routers.api.service: api@internal
      traefik.http.routers.api.middlewares: "authelia@docker"
    ports:
      - 80:80
      - 443:443
  authelia:
    image: authelia/authelia:4.39
    container_name: authelia
    volumes:
      - /etc/plex/services/authelia:/config
    restart: unless-stopped
    networks:
      authelia:
      arr:
    environment:
      PUID: 1000
      PGID: 1000
      TZ: "{{ timezone }}"
    labels:
      traefik.enable: true
      traefik.http.routers.authelia.rule: Host(`{{ authelia.domain }}`)
      traefik.http.services.authelia.loadbalancer.server.port: 80
      traefik.http.routers.authelia.tls: true
      traefik.http.middlewares.authelia.forwardAuth.address: "http://authelia:80/api/authz/forward-auth"
      traefik.http.middlewares.authelia.forwardAuth.trustForwardHeader: "true"
      traefik.http.middlewares.authelia.forwardAuth.authResponseHeaders: "Remote-User,Remote-Groups,Remote-Email,Remote-Name"
  kopia:
    image: kopia/kopia:0.20
    container_name: "kopia"
    restart: unless-stopped
    environment:
      USER: user
      TZ: "{{ timezone }}"
    volumes:
      - "/etc/plex/services/kopia/config:/app/config"
      - "/etc/plex/services/kopia/cache:/app/cache"
      - "/etc/plex/services/kopia/logs:/app/logs"
      - "/etc/plex/services/kopia/tmp:/tmp:shared"
    command:
      - server
      - start
      - --disable-csrf-token-checks
      - --insecure
      # we already have authelia for this
      - --without-password
      - --address=0.0.0.0:51515
      - --metrics-listen-addr=0.0.0.0:51516
    networks:
      kopia:
    labels:
      traefik.enable: true
      traefik.http.routers.kopia.rule: Host(`{{ kopia.domain }}`)
      traefik.http.services.kopia.loadbalancer.server.port: 51515
      traefik.http.routers.kopia.middlewares: "authelia@docker"
      traefik.http.routers.kopia.tls: true
