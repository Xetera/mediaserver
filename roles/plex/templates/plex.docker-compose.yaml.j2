# code: language=yaml
networks:
  plex:
    external: true
  proxy:
    external: true
  kometa:
    external: true

services:
  plex:
    image: lscr.io/linuxserver/plex:1.41.9
    restart: unless-stopped
    container_name: plex
    network_mode: service:wireguard
    environment:
      PUID: 1000
      PGID: 1000
      TZ: "{{ timezone }}"
      VERSION: docker
    volumes:
      - /mnt/storage/library:/library:ro
      - /etc/plex/services/plex:/config
      # tempfs
      - /dev/shm:/dev/shm
    devices:
      - /dev/dri:/dev/dri
    healthcheck:
      test: curl --connect-timeout 15 --silent --show-error --fail http://localhost:32400/identity
      interval: 1m00s
      timeout: 15s
      retries: 3
      start_period: 1m00s
  caddy:
    # needed for cloudflare dns
    image: ghcr.io/caddybuilds/caddy-cloudflare:2.10.0
    user: 1000:1000
    container_name: caddy
    restart: unless-stopped
    volumes:
      - /etc/plex/services/caddy/config:/etc/caddy
      - /etc/plex/services/caddy/data:/data
    # reroute all traffic through wireguard
    # this avoids the need to masquerade incoming traffic
    # so we can retain user IPs
    command: sh /etc/caddy/caddy-proxy.sh
    # cap_drop:
    #   - ALL
    privileged: true
    cap_add:
      - NET_ADMIN
      - NET_BIND_SERVICE
    networks:
      proxy:
        ipv4_address: 10.8.0.3
    healthcheck:
      test: wget -q -O - "http://127.0.0.1:2019/reverse_proxy/upstreams" || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s
  wireguard:
    image: lscr.io/linuxserver/wireguard:1.0.20250521
    container_name: wireguard
    environment:
      PUID: 1000
      PGID: 1000
      TZ: "{{ timezone }}"
    restart: always
    networks:
      plex:
      kometa:
      proxy:
        ipv4_address: 10.8.0.2
    cap_add:
      - NET_ADMIN
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    ports:
      - 51820:51820/udp
    volumes:
      - /etc/plex/services/wireguard:/config
      - /lib/modules:/lib/modules
    healthcheck:
      test: ping -c 1 -W 5 10.0.0.1
      interval: 1m00s
      timeout: 15s
      retries: 3
      start_period: 1m00s
