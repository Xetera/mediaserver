# code: language=yaml
# yaml-language-server: $schema=https://raw.githubusercontent.com/compose-spec/compose-spec/refs/heads/main/schema/compose-spec.json
networks:
  arr:
    external: true
  plex:
    external: true
  kometa:
    external: true
  wizarr:
    external: true

services:
  sonarr:
    image: lscr.io/linuxserver/sonarr:4.0.15
    container_name: sonarr
    environment:
      PUID: 1000
      PGID: 1000
      TZ: "{{ timezone }}"
    volumes:
      - /etc/plex/services/sonarr:/config
      - "{{ nfs.target }}:/data"
    restart: always
    labels:
      traefik.enable: true
      traefik.docker.network: arr
      traefik.http.routers.sonarr.rule: Host(`{{ sonarr.domain }}`)
      traefik.http.services.sonarr.loadbalancer.server.port: 8989
      traefik.http.routers.sonarr.tls: true
      traefik.http.routers.sonarr.middlewares: "authelia@docker"
    networks:
      arr:
    healthcheck:
      test: wget http://localhost:8989 -qO /dev/null || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s
  radarr:
    image: lscr.io/linuxserver/radarr:develop
    container_name: radarr
    environment:
      PUID: 1000
      PGID: 1000
      TZ: "{{ timezone }}"
    volumes:
      - /etc/plex/services/radarr:/config
      - "{{ nfs.target }}:/data"
    restart: always
    labels:
      traefik.enable: true
      traefik.docker.network: arr
      traefik.http.routers.radarr.rule: Host(`{{ radarr.domain }}`)
      traefik.http.services.radarr.loadbalancer.server.port: 7878
      traefik.http.routers.radarr.tls: true
      traefik.http.routers.radarr.middlewares: "authelia@docker"
    networks:
      arr:
    healthcheck:
      test: wget http://localhost:7878 -qO /dev/null || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:1.37.0
    container_name: prowlarr
    environment:
      PUID: 1000
      PGID: 1000
      TZ: "{{ timezone }}"
    volumes:
      - /etc/plex/services/prowlarr:/config
    restart: always
    labels:
      traefik.enable: true
      traefik.docker.network: arr
      traefik.http.routers.prowlarr.rule: Host(`{{ prowlarr.domain }}`)
      traefik.http.services.prowlarr.loadbalancer.server.port: 9696
      traefik.http.routers.prowlarr.tls: true
      traefik.http.routers.prowlarr.middlewares: "authelia@docker"
    networks:
      arr:
    healthcheck:
      test: wget http://localhost:9696 -qO /dev/null || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s
  bazarr:
    image: lscr.io/linuxserver/bazarr:1.5.2
    container_name: bazarr
    environment:
      PUID: 1000
      PGID: 1000
      TZ: "{{ timezone }}"
    volumes:
      - /etc/plex/services/bazarr:/config
      - /mnt/storage:/data
    restart: always
    labels:
      traefik.enable: true
      traefik.docker.network: arr
      traefik.http.routers.bazarr.rule: Host(`{{ bazarr.domain }}`)
      traefik.http.services.bazarr.loadbalancer.server.port: 6767
      traefik.http.routers.bazarr.middlewares: authelia@docker
      traefik.http.routers.bazarr.tls: true
    networks:
      arr:
      plex:
    healthcheck:
      test: wget http://127.0.0.1:6767 -qO /dev/null || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s
  overseerr:
    image: lscr.io/linuxserver/overseerr:1.34.0
    container_name: overseerr
    environment:
      PUID: 1000
      PGID: 1000
      TZ: "{{ timezone }}"
    volumes:
      - /etc/plex/services/overseerr:/config
    restart: unless-stopped
    networks:
      arr:
      plex:
    labels:
      traefik.enable: true
      traefik.docker.network: arr
      traefik.http.routers.overseerr.rule: Host(`{{ overseerr.domain }}`)
      traefik.http.routers.overseerr.tls: true
      traefik.http.services.overseerr.loadbalancer.server.port: 5055
    healthcheck:
      test: wget http://localhost:5055/api/v1/status -qO /dev/null || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s
  tautulli:
    image: lscr.io/linuxserver/tautulli:2.15.2
    container_name: tautulli
    environment:
      PUID: 1000
      PGID: 1000
      TZ: "{{ timezone }}"
    volumes:
      - /etc/plex/services/tautulli:/config
    restart: unless-stopped
    networks:
      arr:
      plex:
    labels:
      traefik.enable: true
      traefik.docker.network: arr
      traefik.http.routers.tautulli.rule: Host(`{{ tautulli.domain }}`)
      traefik.http.services.tautulli.loadbalancer.server.port: 8181
      traefik.http.routers.tautulli.tls: true
      traefik.http.routers.tautulli.middlewares: "authelia@docker"
    healthcheck:
      test: wget http://127.0.0.1:8181/api/v1/status -qO /dev/null || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s
  wizarr:
    container_name: wizarr
    image: ghcr.io/wizarrrr/wizarr:2025.7.8
    volumes:
      - /etc/plex/services/wizarr/database:/data/database
      - /etc/plex/services/wizarr/wizard:/data/wizard_steps
    environment:
      TZ: "{{ timezone }}"
    networks:
      wizarr:
      arr:
      plex:
    labels:
      traefik.enable: true
      traefik.docker.network: wizarr
      traefik.http.routers.wizarr.rule: Host(`{{ wizarr.domain }}`)
      traefik.http.routers.wizarr.tls: true
      traefik.http.services.wizarr.loadbalancer.server.port: 5690
    restart: always
    healthcheck:
      # has to be 127.0.0.1 for whatever reason
      test: wget http://127.0.0.1:5690 -qO /dev/null || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s
  kometa:
    image: lscr.io/linuxserver/kometa:2.2.0
    container_name: kometa
    environment:
      PUID: 1000
      PGID: 1000
      TZ: "{{ timezone }}"
      KOMETA_CONFIG: /config/config.yaml
      KOMETA_TIME: 03:00
      KOMETA_RUN: False
      KOMETA_NO_REPORT: True
      KOMETA_NO_MISSING: False
    volumes:
      - /etc/plex/services/kometa:/config
      - /mnt/storage:/media
    restart: unless-stopped
    networks:
      arr:
      kometa:
  # sabnzbd:
  #   image: lscr.io/linuxserver/sabnzbd:4.5.1
  #   container_name: sabnzbd
  #   environment:
  #     PUID: 1000
  #     PGID: 1000
  #     TZ: "{{ timezone }}"
  #   volumes:
  #     - /etc/plex/services/sabnzbd:/config
  #     - /mnt/storage/usenet:/downloads
  #     - /mnt/temp_downloads:/temp_downloads
  #   restart: unless-stopped
  #   labels:
  #     traefik.enable: true
  #     traefik.http.routers.sabnzbd.rule: Host(`{{ sabnzbd.domain }}`)
  #     traefik.http.services.sabnzbd.loadbalancer.server.port: 8080
  #     traefik.http.routers.sabnzbd.tls: true
  #     traefik.http.routers.sabnzbd.middlewares: authelia@docker
  #   networks:
  #     arr:
  #   healthcheck:
  #     test: wget http://127.0.0.1:8080 -qO /dev/null || exit 1
  #     interval: 10s
  #     timeout: 5s
  #     retries: 3
  #     start_period: 20s
